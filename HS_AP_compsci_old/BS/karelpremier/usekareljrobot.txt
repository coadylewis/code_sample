Karel J. Robotexperimental versionYou may find a later version at http://csis.pace.edu/~bergin/KarelJava2ed/Karel++JavaEdition.html---Get the zip file and unzip itThe Karel J. Robot experimental version is distributed as a zip file. Download this file and unzip it. If you use a command line zip program, be sure to give the -d option so that the directory structure is preserved. You should get the following files all in a new directory. Keep them together and make this your working directory. KarelJRobot.jarkarele.gifkareln.gifkarels.gifkarelw.giftest.kwld <- a sample world file. It is textKarelTest.java <- a sample "main" that you can use to test your instalation. ---Running Karel J. Robot Write a main class something like KarelTest.java here. Make sure that the class is in package kareltherobot. You should probably implement the Directions interface also.Run it, including the jar file KarelJRobot.jar in your classpath   java -cp .;KarelJRobot.jar kareltherobot.KarelTestIf you use an IDE to develop, make sure you include the jar file and (depending on your IDE) get it into the classpath also. 

IMPORTANT NEW INFORMATION: In order to work flexibly with applets, the distributed World now has different behavior. In particular, it is NOT VISIBLE by default. You will need to execute World.setVisible(true); from somewhere in your code to see the robot world. I suggest that you use a static initializer for this. In your main class include something like:

static
{	World.setVisible(true);
}

Actually this static initializer is also a good place from which to open a world file for use by your program. If you do this before setting the world to be visible, it will first appear with all of its walls and beepers. 

---How to build a world.Run the WorldBuilder in the jar file itself.   java -cp KarelJRobot.jar kareltherobot.WorldBuilder

(On most systems, double clicking on the KarelJRobot.jar file will run the world builder.)Pick up a tool in the tools (button) panel. The name of the current tool is highlited. Click where you want to place an item controlled by that tool. For beepers click near an intersection when using the beeper tool. For walls, click across streets (for vertical walls) and across avenues (for horizontal walls) when using the corresponding tool. To put more than one beeper on a corner, click more than once with the beeper tool active. To lower the number of beepers on a corner, control click the corner with the beeper tool. To put an infinite number of beepers on a corner, control-click (with the beeper tool) when there are none on the corner. To clear all the beepers from a corner, shift-click the corner when using the beeper tool. To remove a wall from across a street, control click the wall segment with the appropriate wall tool. 
To change the number of streets or avenues in the world, enter an integer into the corresponding text field and hit enter. Note that this doesn't restrict the world or expand it. It just determines how much of it is drawn with gridlines.Save when you like. I've used an extension kwld here, but there is nothing special about it. It is neither assumed or automatically appended. The files are just text. 

You can clear the contents of a world with the Clear World button. Be careful as the contents will be lost with no undo. This does not affect any file, however, unless you save again.You can also open an existing world to edit/modify it. Use any text editor. If you use an IDE, make a separate project for this and include the jar file. Make kareltherobot.WorldBuilder the main file for the project. In Codewarrior (on the Macintosh at least) you need to set the output to be a class folder rather than a jar file, since the main is in the existing jar file, and not in any code of your own. After you build this class folder will be empty. ---How to use a world created with the world builder. Remember the name you used when you saved it. Say testworld.kwldInclude a statement in your robot program to open it. Include this at the beginning ofyour main task block.  World.readWorld("test.kwld");The world file will be opened and its content merged into your existing world. 
---
Note on the files created by the world builder.The format is compatible with that of the older simulator. However, there is no need to use the older version as this is an extension. You can actually write the world files with a text editor. Lines that do not start with a keyword for the builder are ignored. Elements can appear in any order. They are NOT case sensitive. Here is a sample file.KarelWorldStreets 10Avenues 20beepers 3 4 1beepers 4 2 1eastwestwalls 3 2 4northsouthwalls 4 2 2northsouthwalls 4 3 3northsouthwalls 1 5 5northsouthwalls 1 4 4The first line (KarelWorld) is not a keyword, but it might be in the future. It might also contain a version number eventually. It is ignored when reading now, but written when you save a world. The following gives the meaning of the current keywords. This is not expected to change. Streets --The number of streets to draw.Avenues --The number of avenues to draw. beepers --The data is: street, avenue, number of beepers, without punctuation of any kind.eastwestwalls -- The data is: North of Street, first avenue crossed, last avenue crossed. Last should be bigger than first (or equal). northsouthwalls -- The data is: East of Avenue, first street crossed, last street crossed. Last should be bigger than first (or equal). The world builder writes out a separate wall command for each segment of a wall (one block long). If you do it by hand, you can combine them. If you create a world in a Robot program using the programming interface (in this version or the previous one) and save it, it will be consistent with the world builder files. ---Caveats It seems to work on a PC.I haven't tried it under Linux.I've had some problems on a Mac under OS X. Throwing exceptions I can't explain. There may be bugs in the peer structure as it is new. It is written in Java 1.1 so it runs on Mac OS 9. The button highliting doesn't happen though. Last Updated: August 12, 2002